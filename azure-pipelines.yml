# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- uat
variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dockerRegConnection'
  containerRegistry: dockerRegConnection
  imageRepository: 'shawon10/webclient-angular-crud'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildNumber)'
  vmUser: 'ubuntu'  # Replace with your VM's username
  vmHost: '20.106.227.129'       # Replace with your VM's IP address
  #vmKey: $(sshPrivateKey)  # Assuming you've saved your private key in Azure Pipeline's secret variables
  targetPath: '/tmp'

resources:
- repo: self

stages:
  - stage: Build
    displayName: Build Image (Docker)
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          repository: $(imageRepository)
          containerRegistry: $(containerRegistry)
          
      - task: Docker@2
        displayName: Build an image and push to docker hub
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)

  - stage: Deploy
    displayName: Deploy to VM
    dependsOn: Build
    jobs:
    - job: Deployment
      displayName: Deploy
      pool: 
        vmImage: ubuntu-latest
      steps:
      - script: |
         sudo apt install -y sshpass
         sed -i -e 's|$DOCKER_REGISTRY|'"$IMAGE_NAME"'|' $(Build.SourcesDirectory)/docker-compose.yml  # Replace path with your actual path
         sed -i -e 's|$TAG|'"$IMAGE_TAG"'|' $(Build.SourcesDirectory)/docker-compose.yml  # Replace path with your actual path
         scp -o StrictHostKeyChecking=no  $(Build.SourcesDirectory)/docker-compose.yml $(vmUser)@$(vmHost):/tmp
         sshpass -P "@Cloudageskill" ssh -o StrictHostKeyChecking=no $(vmUser)@$(vmHost) "cd $(targetPath) && docker-compose up -d"

  # - stage: Deploy
  #   displayName: Deploy to Kubernetes
  #   dependsOn: Build

  #   jobs:
  #   - job: Deployment
  #     displayName: Deploy
  #     pool: 
  #       vmImage: ubuntu-latest
  #     steps:
  #       - task: KubernetesManifest@0
  #         displayName: Deploy to Kubernetes cluster
  #         inputs:
  #           kubernetesServiceConnection: aks-serviceconnection
  #           action: deploy
  #           manifests: |
  #             ./manifests/deployment.yml
  #             ./manifests/service.yml
  #             ./manifests/ingress.yml
  #           containers: |
  #             $(imageRepository):$(tag)
            

          
